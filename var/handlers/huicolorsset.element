<?php
/*
 *
 *                    Ampoliros Application Server
 *
 *                      http://www.ampoliros.com
 *
 *
 *
 *   Copyright (C) 2000-2004 Solarix
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
// $Id: huicolorsset.element,v 1.6 2004-07-08 15:04:22 alex Exp $

$element['type'] = 'huicolorsset';
$element['classname'] = 'HuicolorssetElement';
$element['priority'] = 0;
$element['site'] = FALSE;

if ( !defined( 'HUICOLORSSET_ELEMENT' ) )
{
define( 'HUICOLORSSET_ELEMENT', TRUE );

OpenLibrary( 'hui.library' );
OpenLibrary( 'huithemes.library' );

/*!
@class HuicolorssetElement

@abstract Huicolorsset element handler.
*/
class HuicolorssetElement extends ModuleElement
{
    public $type = 'huicolorsset';
    public $site = FALSE;

    function HuicolorssetElement( &$ampdb, &$sitedb, $modname, $name, $file, $basedir )
    {
        $this->ModuleElement( $ampdb, $sitedb, $modname, $name, $file, $basedir );
    }

    function DoInstallAction( $params )
    {
        $result = FALSE;

        if ( strlen( $params['file'] ) )
        {
            $params['file'] = $this->basedir.'/etc/'.basename( $params['file'] );

            if ( @copy( $params['file'], CONFIG_PATH.basename( $params['file'] )  ) )
            {
                @chmod( CONFIG_PATH.basename( $params['file'] ), 0644 );

                $hui_element = new HuiColorsSet( $this->ampdb, $params['name'] );
                $params['file'] = basename( $params['file'] );

                if ( $hui_element->Install( $params ) )
                {
                    $result = TRUE;
                }
                else $this->mLog->LogEvent( 'ampoliros.huicolorsset_element.huicolorsset_class.doinstallaction',
                                            'In module '.$this->modname.', element '.$params['name'].': Unable to install element', LOGGER_ERROR );
            }
            else $this->mLog->LogEvent( 'ampoliros.huicolorsset_element.huicolorsset_class.doinstallaction',
                                        'In module '.$this->modname.', element '.$params['name'].': Unable to copy hui element file ('.$params['file'].') to its destination ('.CONFIG_PATH.basename( $params['file'] ).')', LOGGER_ERROR );
        }
        else $this->mLog->LogEvent( 'ampoliros.huicolorsset_element.huicolorsset_class.doinstallaction',
                                    'In module '.$this->modname.', element '.$params['name'].': Empty element file name', LOGGER_ERROR );

        return $result;
    }

    function DoUninstallAction( $params )
    {
        $result = FALSE;

        if ( strlen( $params['file'] ) )
        {
            $hui_element = new HuiColorsSet( $this->ampdb, $params['name'] );

            if ( $hui_element->Remove( $params ) )
            {
                if ( @unlink( CONFIG_PATH.basename( $params['file'] ) ) )
                {
                    $result = TRUE;
                }
            }
            else $this->mLog->LogEvent( 'ampoliros.huicolorsset_element.huicolorsset_class.douninstallaction',
                                        'In module '.$this->modname.', element '.$params['name'].': Unable to uninstall element', LOGGER_ERROR );
        }
        else $this->mLog->LogEvent( 'ampoliros.huicolorsset_element.huicolorsset_class.douninstallaction',
                                    'In module '.$this->modname.', element '.$params['name'].': Empty element file name', LOGGER_ERROR );

        return $result;
    }

    function DoUpdateAction( $params )
    {
        $result = FALSE;

        if ( strlen( $params['file'] ) )
        {
            $params['file'] = $this->basedir.'/etc/'.basename( $params['file'] );

            if ( @copy( $params['file'], CONFIG_PATH.basename( $params['file'] )  ) )
            {
                @chmod( CONFIG_PATH.basename( $params['file'] ), 0644 );

                $hui_element = new HuiColorsSet( $this->ampdb, $params['name'] );
                $params['file'] = basename( $params['file'] );
                if ( $hui_element->Update( $params ) )
                {
                    $result = TRUE;
                }
            	else $this->mLog->LogEvent( 'ampoliros.huicolorsset_element.huicolorsset_class.doupdateaction',
                                            'In module '.$this->modname.', element '.$params['name'].': Unable to update element', LOGGER_ERROR );
            }
            else $this->mLog->LogEvent( 'ampoliros.huicolorsset_element.huicolorsset_class.doupdateaction',
                                        'In module '.$this->modname.', element '.$params['name'].': Unable to copy hui element file ('.$params['file'].') to its destination ('.CONFIG_PATH.basename( $params['file'] ).')', LOGGER_ERROR );

        }
        else $this->mLog->LogEvent( 'ampoliros.huicolorsset_element.huicolorsset_class.doupdateaction',
                                    'In module '.$this->modname.', element '.$params['name'].': Empty element file name', LOGGER_ERROR );

        return $result;
    }
}

}
?>
