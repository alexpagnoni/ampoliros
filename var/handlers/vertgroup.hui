<?php
/*
 *
 *                    Ampoliros Application Server
 *
 *                      http://www.ampoliros.com
 *
 *
 *
 *   Copyright (C) 2000-2004 Solarix
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
// $Id: vertgroup.hui,v 1.12 2004-07-08 15:04:22 alex Exp $

$huielementclass = 'HuiVertGroup';

if ( !defined( 'VERTGROUP_HUI' ) )
{
define( 'VERTGROUP_HUI', true );
import('com.solarix.ampoliros.hui.HuiContainerElement');

class HuiVertGroup extends HuiContainerElement
{
    public $mWidgetType = 'vertgroup';
    /*! @public mAlign string - Alignment of group elements. */
    //public $mAlign;
    /*! @public mGroupAlign string - Group horizontal alignment. */
    //public $mGroupAlign;
    /*! @public mGroupValign string - Group vertical alignment. */
    //public $mGroupValign;
    /*! @public mHeight string - Group height. */
    //public $mHeight;
    /*! @public mWidth string - Group width. */
    //public $mWidth;

    /*!
     @function HuiVertGroup

     @abstract Class constructor.

     @discussion Class constructor.
     */
    public function HuiVertGroup( $elemName, $elemArgs = '', $elemTheme = '', $dispEvents = '' )
    {
        $this->HuiContainerElement( $elemName, $elemArgs, $elemTheme, $dispEvents );
        
            if (isset($this -> mArgs['align'])) {
                switch ($this -> mArgs['align']) {
                    case 'left' :
                    case 'center' :
                    case 'right':
                        break;
                    default :
                        $this -> mArgs['align'] = 'left';
                }
            } else
                $this -> mArgs['align'] = 'left';

            if (isset($this -> mArgs['groupalign'])) {
                switch ($this -> mArgs['groupalign']) {
                    case 'left' :
                    case 'center' :
                    case 'right':
                        break;
                    default :
                        $this -> mArgs['groupalign'] = 'left';
                }
            } else
                $this -> mArgs['groupalign'] = 'left';

            if (isset($this -> mArgs['groupvalign'])) {
                switch ($this -> mArgs['groupvalign']) {
                    case 'top' :
                    case 'middle' :
                    case 'bottom':
                        break;
                    default :
                        $this -> mArgs['groupvalign'] = 'middle';
                }
            } else
                $this -> mArgs['groupvalign'] = 'middle';
    }

    protected function _buildBegin()
    {
        return ( $this->mComments ? '<!-- begin '.$this->mName." vertgroup -->\n" : '' ).
            '<table border="0" cellspacing="1" cellpadding="0"'.
            ( strlen( $this->mArgs['groupalign']) ? ' align="'.$this->mArgs['groupalign'].'"' : '' ).
            ( strlen( $this->mArgs['groupvalign'] ) ? ' valign="'.$this->mArgs['groupvalign'].'"' : '' ).
            ( strlen( $this->mArgs['height'] ) ? ' height="'.$this->mArgs['height'].'"' : '' ).
            ( strlen( $this->mArgs['width'] ) ? ' width="'.$this->mArgs['width'].'"' : '' ).
            ">\n";
    }

    protected function _buildEnd()
    {
        return "</table>\n".( $this->mComments ? "<!-- end ".$this->mName." vertgroup -->\n" : '' );
    }

    protected function _buildBlockBegin()
    {
        return '<tr><td'.( $this->mArgs['align'] ? ' align="'.$this->mArgs['align'].'"' : '' ).
            ( strlen( $this->mArgs['width'] ) ? ' width="'.$this->mArgs['width'].'"' : '' ).">\n";
    }

    protected function _buildBlockEnd()
    {
        return "</td></tr>\n";
    }
}

}
?>
