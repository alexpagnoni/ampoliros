<?php
/*
 *
 *                    Ampoliros Application Server
 *
 *                      http://www.ampoliros.com
 *
 *
 *
 *   Copyright (C) 2000-2004 Solarix
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
// $Id: tab.hui,v 1.16 2004-07-08 15:04:22 alex Exp $

$huielementclass = 'HuiTab';

if (!defined('TAB_HUI')) {
    define ('TAB_HUI', true);

import('com.solarix.ampoliros.hui.HuiContainerElement');

    /*!
    @class HuiTab
    @abstract Tab widget container.
    */
    class HuiTab extends HuiContainerElement {
        public $mWidgetType = 'tab';
        //public $mTabs;
        //public $mActiveTab;
        //public $mTabPages = array();
        //public $mTabActionFunction;
        //public $mTabRows = 1;

        public function HuiTab($elemName, $elemArgs = '', $elemTheme = '', $dispEvents = '') {
            $this -> HuiContainerElement($elemName, $elemArgs, $elemTheme, $dispEvents);

            $tmp_sess = $this -> RetrieveSession();

            if (!isset($this -> mArgs['tabrows']))
                $this -> mArgs['tabrows'] = 1;

            if (isset($this -> mArgs['activetab']) and strlen($this -> mArgs['activetab']))
                $this -> mArgs['activetab'] = $this -> mArgs['activetab'];
            else
                if (isset($tmp_sess['activetab']) and strlen($tmp_sess['activetab']))
                    $this -> mArgs['activetab'] = $tmp_sess['activetab'];
                else
                    $this -> mArgs['activetab'] = 0;

            $this -> StoreSession(array('activetab' => $this -> mArgs['activetab']));
        }

        public function addChild(HuiWidgetElement $childWidget) {
            $this -> mArgs['tabpages'][] = $childWidget;
            return true;
        }

        public function build(HuiDispatcher $rhuiDisp) {
            $result = false;

            $this -> mrHuiDisp = $rhuiDisp;

            $this -> mLayout = ($this -> mComments ? '<!-- begin '.$this -> mName." tab -->\n" : '');
            $this -> mLayout.= '<table border="0" cellspacing="2" cellpadding="0"><tr><td bgcolor="'.$this -> mThemeHandler -> mColorsSet['tables']['gridcolor']."\">\n";
            $this -> mLayout.= '<table border="0" width="100%" cellspacing="1" cellpadding="4" bgcolor="'.$this -> mThemeHandler -> mColorsSet['tables']['gridcolor']."\">\n<tr>";

            $rel_width = 100;

            if (count($this -> mArgs['tabs']) and strlen($this -> mArgs['tabactionfunction'])) {
                $rel_width = 100 / ceil(count($this -> mArgs['tabs']) / $this -> mArgs['tabrows']) + 1;

                if ($this -> mArgs['activetab'] > (count($this -> mArgs['tabs']) - 1))
                    $this -> mArgs['activetab'] = count($this -> mArgs['tabs']) - 1;
                $tab_counter = 0;
                $elem = '';

                $curr_tab_row = 0;
                $tab_row_cell = 0;
                $rows_start = true;

                while (list (, $tab) = each($this -> mArgs['tabs'])) {
                    $func_name = $this -> mArgs['tabactionfunction'];

                    $this -> mLayout.= '<td style="cursor: pointer;" bgcolor="'. ($tab_counter == $this -> mArgs['activetab'] ? $this -> mThemeHandler -> mColorsSet['buttons']['selected'] : $this -> mThemeHandler -> mColorsSet['pages']['bgcolor']).'" width="'.$rel_width.'%" align="center" nowrap'. ($tab_counter != $this -> mArgs['activetab'] ? ' onMouseOver="this.style.backgroundColor=\''.$this -> mThemeHandler -> mColorsSet['buttons']['notselected'].'\';huiHint(\''.$this -> mArgs['tabs'][$tab_counter]['label'].'\')" onMouseOut="this.style.backgroundColor=\''.$this -> mThemeHandler -> mColorsSet['pages']['bgcolor'].'\';huiUnHint()"'.' onClick="this.style.backgroundColor=\''.$this -> mThemeHandler -> mColorsSet['buttons']['selected'].'\';'.'location.href=\''.$func_name ($tab_counter).'\'"' : '').'><table cellpadding="0" cellspacing="1" width="100%"><tr>';
                    if ($tab_counter == $this -> mArgs['activetab'])
                        $this -> mLayout.= '<td><img src="'.$this -> mThemeHandler -> mStyle['arrowright'].'" alt=""></td><td width="100%" align="center" valign="middle" nowrap style="white-space: nowrap"><strong>'.$this -> mArgs['tabs'][$tab_counter]['label'].'</strong></td>';
                    else
                        $this -> mLayout.= '<td><img src="'.$this -> mThemeHandler -> mStyle['arrowdown'].'" border="0" alt=""></td><td width="100%" align="center" valign="middle" nowrap style="white-space: nowrap"><font color="'.$this -> mThemeHandler -> mColorsSet['buttons']['text'].'">'.$this -> mArgs['tabs'][$tab_counter]['label'].'</font></td>';
                    if ($tab_counter == $this -> mArgs['activetab'] and $this -> mArgs['tabpages'][$tab_counter] -> Build($this -> mrHuiDisp))
                        $elem = $this -> mArgs['tabpages'][$tab_counter] -> Render();
                    $this -> mLayout.= '</tr></table></td>';
                    $tab_counter ++;

                    if ($this -> mArgs['tabrows'] > 1) {
                        $tab_row_cell ++;
                        if ($tab_row_cell == (ceil(count($this -> mArgs['tabs']) / $this -> mArgs['tabrows']))) {
                            if ($rows_start)
                                $this -> mLayout.= '<td bgcolor="white" width="'.$rel_width.'%" rowspan="'.$this -> mArgs['tabrows'].'">&nbsp;</td></tr>';
                            $this -> mLayout.= '</tr><tr>';
                            $tab_row_cell = 0;
                            $rows_start = false;
                        }
                    }
                }

                if ($tab_row_cell) {
                    $this -> mLayout.= '<td bgcolor="white" colspan="'. (ceil(count($this -> mArgs['tabs']) / $this -> mArgs['tabrows']) - $tab_row_cell +1).'">&nbsp;</td></tr>';
                }
            }

            if ($this -> mArgs['tabrows'] == 1)
                $this -> mLayout.= '<td bgcolor="white" width="'.$rel_width.'%">&nbsp;</td></tr>';

            $this -> mLayout.= '<tr><td bgcolor="white" colspan="'. (ceil(count($this -> mArgs['tabs']) / $this -> mArgs['tabrows']) + 1).'">';
            $this -> mLayout.= $elem;
            $this -> mLayout.= '</td></tr>';

            $this -> mLayout.= "</table></td></tr></table>\n";
            $this -> mLayout.= ($this -> mComments ? '<!-- end '.$this -> mName." tab -->\n" : '');

            $this -> mBuilt = true;
            $result = true;

            return $result;
        }
    }

}
?>
