<?php
/*
 *
 *                    Ampoliros Application Server
 *
 *                      http://www.ampoliros.com
 *
 *
 *
 *   Copyright (C) 2000-2004 Solarix
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
// $Id: iframe.hui,v 1.7 2004-07-08 15:04:22 alex Exp $

$huielementclass = 'HuiIFrame';

if ( defined( 'IFRAME_HUI' ) ) return;
else define( 'IFRAME_HUI', true );

import('com.solarix.ampoliros.hui.HuiWidgetElement');

/*!
 @class HuiIFrame

 @abstract Label widget.

 @discussion Label widget.
 */
class HuiIFrame extends HuiWidgetElement
{
    public $mWidgetType = 'iframe';
    public $mSource;
    public $mWidth;
    public $mHeight;
    public $mScrolling;
    public $mMarginWidth = '0';
    public $mMarginHeight = '0';

    /*!
     @function HuiIFrame

     @abstract Class constructor.
     */
    function HuiIFrame(
        $elemName,
        $elemArgs = '',
        $elemTheme = '',
        $dispEvents = ''
        )
    {
        $this->HuiWidgetElement(
            $elemName,
            $elemArgs,
            $elemTheme,
            $dispEvents
            );

        if ( isset( $this->mArgs['source'] ) ) $this->mSource = $this->mArgs['source'];

        if ( isset( $this->mArgs['scrolling'] ) and
             (
              $elemArgs['scrolling'] == 'true'
              or
              $elemArgs['scrolling'] == 'false'
              or
              $elemArgs['scrolling'] == 'auto'
             )
           ) $this->mScrolling = $this->mArgs['scrolling'];
        else $this->mScrolling = 'auto';

        if ( isset( $this->mArgs['marginwidth'] ) ) $this->mMarginWidth = $this->mArgs['marginwidth'];
        if ( isset( $this->mArgs['marginheight'] ) ) $this->mMarginHeight = $this->mArgs['marginheight'];

        if ( isset( $this->mArgs['width'] ) ) $this->mWidth = $this->mArgs['width'];
        if ( isset( $this->mArgs['height'] ) ) $this->mHeight = $this->mArgs['height'];
    }

    function _Build()
    {
        $this->mLayout =
            ( $this->mComments ? '<!-- begin '.$this->mName.' iframe -->' : '' ).
            '<iframe name="'.$this->mName.'"'.
            ' src="'.$this->mSource.'"'.
            ' scrolling="'.$this->mScrolling.'"'.
            ( strlen( $this->mWidth ) ? ' width="'.$this->mWidth.'"' : '' ).
            ( strlen( $this->mHeight ) ? ' height="'.$this->mHeight.'"' : '' ).
            ( strlen( $this->mMarginWidth ) ? ' width="'.$this->mMarginWidth.'"' : '' ).
            ( strlen( $this->mMarginHeight ) ? ' height="'.$this->mMarginHeight.'"' : '' ).
            ' frameborder="0">Your user agent does not support frames or is currently configured not to display frames.</iframe>'.
            ( $this->mComments ? '<!-- end '.$this->mName." iframe -->\n" : '' );
        return true;
    }
}

?>
