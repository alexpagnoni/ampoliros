<?php
/*
 *
 *                    Ampoliros Application Server
 *
 *                      http://www.ampoliros.com
 *
 *
 *
 *   Copyright (C) 2000-2004 Solarix
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
// $Id: grid.hui,v 1.11 2004-07-08 15:04:22 alex Exp $

$huielementclass = 'HuiGrid';

if (!defined('GRID_HUI')) {
    define ('GRID_HUI', true);

import('com.solarix.ampoliros.hui.HuiContainerElement');

    /*!
     @class HuiGrid
    
     @abstract Grid widget container.
     */
    class HuiGrid extends HuiContainerElement {
        public $mWidgetType = 'grid';
        //public $mCells;
        //public $mRows;
        //public $mCols;
        //public $mCompact;

        public function HuiGrid($elemName, $elemArgs = '', $elemTheme = '', $dispEvents = '') {
            $this -> HuiContainerElement($elemName, $elemArgs, $elemTheme, $dispEvents);
            if (isset($this -> mArgs['compact']))
                $this -> mArgs['compact'] = $this -> mArgs['compact'] == 'true' ? 'true' : 'false';
            else
                $this -> mArgs['compact'] = 'false';
        }

        public function addChild(HuiWidgetElement $childWidget, $row, $col, $halign = '', $valign = '') {
            if ($row >= $this -> mArgs['rows'])
                $this -> mArgs['rows'] = $row +1;
            if ($col >= $this -> mArgs['cols'])
                $this -> mArgs['cols'] = $col +1;

            $this -> mArgs['cells'][$row][$col]['widget'] = $childWidget;

            if ($halign == 'left' or $halign == 'center' or $halign == 'right')
                $this -> mArgs['cells'][$row][$col]['halign'] = $halign;
            if ($valign == 'top' or $valign == 'middle' or $valign == 'bottom')
                $this -> mArgs['cells'][$row][$col]['valign'] = $valign;
            return true;
        }

        public function build(HuiDispatcher $rhuiDisp) {
            $result = false;
            $this -> mrHuiDisp = $rhuiDisp;

            if ($this -> mArgs['rows'] and $this -> mArgs['cols']) {
                $this -> mLayout = ($this -> mComments ? '<!-- begin '.$this -> mName." grid -->\n" : '').'<table border="0"'. ($this -> mArgs['compact'] == 'true' ? ' cellpadding="0" cellspacing="0"' : '').'>';

                for ($row = 0; $row < $this -> mArgs['rows']; $row ++) {
                    $this -> mLayout.= "<tr>\n";
                    for ($col = 0; $col < $this -> mArgs['cols']; $col ++) {
                        $this -> mLayout.= '<td'. (isset($this -> mArgs['cells'][$row][$col]['halign']) ? ' align="'.$this -> mArgs['cells'][$row][$col]['halign'].'"' : ''). (isset($this -> mArgs['cells'][$row][$col]['valign']) ? ' valign="'.$this -> mArgs['cells'][$row][$col]['valign'].'"' : '').">\n";
                        $elem = '';

                        if (isset($this -> mArgs['cells'][$row][$col]['widget']) and is_object($this -> mArgs['cells'][$row][$col]['widget'])) {
                            if ($this -> mArgs['cells'][$row][$col]['widget'] -> Build($this -> mrHuiDisp))
                                $elem = $this -> mArgs['cells'][$row][$col]['widget'] -> Render();
                        } else {
                            $elem = '&nbsp;';
                        }
                        $this -> mLayout.= $elem;
                        $this -> mLayout.= "</td>\n";
                    }
                    $this -> mLayout.= "</tr>\n";
                }
                $this -> mLayout.= "</table>\n". ($this -> mComments ? '<!-- end '.$this -> mName." grid -->\n" : '');

                $this -> mBuilt = true;
                $result = true;
            }
            return $result;
        }
    }

}
?>
