<?php
/*
 *
 *                    Ampoliros Application Server
 *
 *                      http://www.ampoliros.com
 *
 *
 *
 *   Copyright (C) 2000-2004 Solarix
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
// $Id: link.hui,v 1.15 2004-07-08 15:04:22 alex Exp $

$huielementclass = 'HuiLink';

if ( !defined( 'LINK_HUI' ) )
{
define( 'LINK_HUI', TRUE );

import('com.solarix.ampoliros.hui.HuiWidgetElement');

/*!
 @class HuiLink

 @abstract Link widget.
 */
class HuiLink extends HuiWidgetElement
{
    public $mWidgetType = 'link';
    //public $mLink;
    //public $mLabel;
    /*! @public mNoWrap string - 'true' if the text may be automatically wrapped when necessary. Defaults to 'true'. */
    //public $mNoWrap;
    //public $mCompact;
    //public $mTarget;
    //public $mBold;
    //public $mTitle;

    /*!
     @function HuiLink

     @abstract Class constructor.
     */
    public function HuiLink( $elemName, $elemArgs = '', $elemTheme = '', $dispEvents = '' )
    {
        $this->HuiWidgetElement( $elemName, $elemArgs, $elemTheme, $dispEvents );
        if ( !isset( $this->mArgs['label'] ) ) $this->mArgs['label'] = isset( $this->mArgs['link'] ) ? $this->mArgs['label'] = $this->mArgs['link'] : '';
        if ( isset( $this->mArgs['nowrap'] ) and
             (
              $this->mArgs['nowrap'] == 'true'
              or
              $this->mArgs['nowrap'] == 'false'
             )
           ) $this->mArgs['nowrap'] = $this->mArgs['nowrap'];
        else $this->mArgs['nowrap'] = 'true';

        if ( isset( $this->mArgs['compact'] ) ) $this->mArgs['compact']  = $this->mArgs['compact'] == 'true' ? 'true' : 'false';
        else $this->mArgs['compact'] = 'false';

        if ( isset( $this->mArgs['bold'] ) ) $this->mArgs['bold']  = $this->mArgs['bold'] == 'true' ? 'true' : 'false';
        else $this->mArgs['bold'] = 'false';
    }

    protected function _build()
    {
        $this->mLayout = ( $this->mComments ? '<!-- begin '.$this->mName.' link -->' : '' ).
            '<table border="0" '.( $this->mArgs['nowrap'] == 'true' ? 'width="0%"' : '' ).' height="0%"'.
            ( $this->mArgs['compact'] == 'true' ? ' cellpadding="1" cellspacing="0"' : '' ).
            '>'.
            '<tr><td class="normal" '.( $this->mArgs['nowrap'] == 'true' ? 'nowrap style="white-space: nowrap"' : '' ).'>'.
            ( strlen( $this->mArgs['link'] ) ? '<a href="'.$this->mArgs['link'].'"'.
            ( strlen( $this->mArgs['target'] ) ? ' target="'.$this->mArgs['target'].'"' : '' ).
            ( strlen( $this->mArgs['title'] ) ? ' title="'.$this->mArgs['title'].'"' : '' ).
            '>'.( $this->mArgs['bold'] == 'true' ? '<strong>' : '' ).$this->mArgs['label'].( $this->mArgs['bold'] == 'true' ? '</strong>' : '' ).'</a>' : $this->mArgs['label'] ).
            '</td></tr></table>'.
            ( $this->mComments ? '<!-- end '.$this->mName." link -->\n" : '' );
        return TRUE;
    }
}

}
?>
