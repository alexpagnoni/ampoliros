<?php
/*
 *
 *                    Ampoliros Application Server
 *
 *                      http://www.ampoliros.com
 *
 *
 *
 *   Copyright (C) 2000-2004 Solarix
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */
// $Id: huistyle.element,v 1.6 2004-07-08 15:04:22 alex Exp $

$element['type'] = 'huistyle';
$element['classname'] = 'HuistyleElement';
$element['priority'] = 0;
$element['site'] = FALSE;

if ( !defined( 'HUISTYLE_ELEMENT' ) )
{
define( 'HUISTYLE_ELEMENT', TRUE );

OpenLibrary( 'hui.library' );
OpenLibrary( 'huithemes.library' );

/*!
@class HuistyleElement

@abstract Huistyle element handler.
*/
class HuistyleElement extends ModuleElement
{
    public $type = 'huistyle';
    public $site = FALSE;

    function HuistyleElement( &$ampdb, &$sitedb, $modname, $name, $file, $basedir )
    {
        $this->ModuleElement( $ampdb, $sitedb, $modname, $name, $file, $basedir );
    }

    function DoInstallAction( $params )
    {
        $result = FALSE;

        if ( strlen( $params['file'] ) )
        {
            $params['file'] = $this->basedir.'/etc/'.basename( $params['file'] );

            if ( @copy( $params['file'], CONFIG_PATH.basename( $params['file'] )  ) )
            {
                @chmod( CONFIG_PATH.basename( $params['file'] ), 0644 );

                $hui_element = new HuiStyle( $this->ampdb, $params['name'] );

                $params['file'] = basename( $params['file'] );

                if ( $hui_element->Install( $params ) )
                {
                    $style_elements = $hui_element->GetStyle();

                    if ( !file_exists( CGI_PATH.'styles' ) ) @mkdir( CGI_PATH.'styles', 0755 );
                    if ( !file_exists( CGI_PATH.'styles/'.$params['name'] ) ) @mkdir( CGI_PATH.'styles/'.$params['name'], 0755 );

                    while ( list( , $file ) = each( $style_elements ) )
                    {
                        if ( strlen( $file['value'] ) ) @copy( $this->basedir.'/www/themes/styles/'.$params['name'].'/'.$file['value'], CGI_PATH.'styles/'.$params['name'].'/'.$file['value'] );
                    }

                    $result = TRUE;
                }
                else $this->mLog->LogEvent( 'ampoliros.huistyle_element.huistyle_class.doinstallaction',
                                            'In module '.$this->modname.', element '.$params['name'].': Unable to install element', LOGGER_ERROR );
            }
            else $this->mLog->LogEvent( 'ampoliros.huistyle_element.huistyle_class.doinstallaction',
                                        'In module '.$this->modname.', element '.$params['name'].': Unable to copy hui element file ('.$params['file'].') to its destination ('.CONFIG_PATH.basename( $params['file'] ).')', LOGGER_ERROR );
        }
        else $this->mLog->LogEvent( 'ampoliros.huistyle_element.huistyle_class.doinstallaction',
                                    'In module '.$this->modname.', element '.$params['name'].': Empty element file name', LOGGER_ERROR );

        return $result;
    }

    function DoUninstallAction( $params )
    {
        $result = FALSE;

        if ( strlen( $params['file'] ) )
        {
            $hui_element = new HuiStyle( $this->ampdb, $params['name'] );

            if ( $hui_element->Remove( $params ) )
            {
                $style_elements = $hui_element->GetStyle();

                while ( list( , $file ) = each( $style_elements ) )
                {
                    if ( strlen( $file['value'] ) ) @unlink( CGI_PATH.'styles/'.$params['name'].'/'.$file['value'] );
                }

                if ( !file_exists( CGI_PATH.'styles/'.$params['name'] ) ) @rmdir( CGI_PATH.'styles/'.$params['name'] );

                if ( @unlink( CONFIG_PATH.basename( $params['file'] ) ) )
                {
                    $result = TRUE;
                }
            }
            else $this->mLog->LogEvent( 'ampoliros.huistyle_element.huistyle_class.douninstallaction',
                                        'In module '.$this->modname.', element '.$params['name'].': Unable to uninstall element', LOGGER_ERROR );
        }
        else $this->mLog->LogEvent( 'ampoliros.huistyle_element.huistyle_class.douninstallaction',
                                    'In module '.$this->modname.', element '.$params['name'].': Empty element file name', LOGGER_ERROR );

        return $result;
    }

    function DoUpdateAction( $params )
    {
        $result = FALSE;

        if ( strlen( $params['file'] ) )
        {
            $params['file'] = $this->basedir.'/etc/'.basename( $params['file'] );

            if ( @copy( $params['file'], CONFIG_PATH.basename( $params['file'] )  ) )
            {
                @chmod( CONFIG_PATH.basename( $params['file'] ), 0644 );

                $hui_element = new HuiStyle( $this->ampdb, $params['name'] );
                $params['file'] = basename( $params['file'] );
                if ( $hui_element->Update( $params ) )
                {
                    $style_elements = $hui_element->GetStyle();

                    if ( !file_exists( CGI_PATH.'styles' ) ) @mkdir( CGI_PATH.'styles', 0755 );
                    if ( !file_exists( CGI_PATH.'styles/'.$params['name'] ) ) @mkdir( CGI_PATH.'styles/'.$params['name'], 0755 );

                    while ( list( , $file ) = each( $style_elements ) )
                    {
                        if ( strlen( $file['value'] ) ) @copy( $this->basedir.'/www/themes/styles/'.$params['name'].'/'.$file['value'], CGI_PATH.'styles/'.$params['name'].'/'.$file['value'] );
                    }

                    $result = TRUE;
                }
            	else $this->mLog->LogEvent( 'ampoliros.huistyle_element.huistyle_class.doupdateaction',
                                            'In module '.$this->modname.', element '.$params['name'].': Unable to update element', LOGGER_ERROR );
            }
            else $this->mLog->LogEvent( 'ampoliros.huistyle_element.huistyle_class.doupdateaction',
                                        'In module '.$this->modname.', element '.$params['name'].': Unable to copy hui element file ('.$params['file'].') to its destination ('.CONFIG_PATH.basename( $params['file'] ).')', LOGGER_ERROR );

        }
        else $this->mLog->LogEvent( 'ampoliros.huistyle_element.huistyle_class.doupdateaction',
                                    'In module '.$this->modname.', element '.$params['name'].': Empty element file name', LOGGER_ERROR );

        return $result;
    }
}

}
?>
